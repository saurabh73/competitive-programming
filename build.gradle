plugins {
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.12.0'
}

sourceCompatibility=1.8
targetCompatibility=1.8

allprojects {
    apply plugin: 'java'
    group 'com.github.saurabh73'
    version '1.6.0'

    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
    }
}


dependencies {
    // utility libraries
    implementation group: 'org.jooq', name: 'joor-java-8', version: '0.9.13'
    implementation group: 'com.google.googlejavaformat', name: 'google-java-format', version: '1.7'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.takes', name: 'takes', version: '1.19'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
    implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'

    // internal annotations library
    api project(':competitive-programming-annotation')
}

gradlePlugin {
    // Define the plugin
    plugins {
        CompetitiveProgrammingPlugin {
            id = 'com.github.saurabh73.competitive-programming'
            implementationClass = 'competitive.programming.gradle.plugin.CompetitiveProgrammingPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/saurabh73/competitive-programming'
    vcsUrl = 'https://github.com/saurabh73/competitive-programming'
    description = 'This plugin aims to help in the competitive programming challenges by allowing you to develop in several files with a one click build, and sharing a common set of codes between challenges. Don\'t reinvent the wheel, focus on the subject! Supports Problem parsing and Junit based test case matching for better testing and debugging.'
    tags = ['competitive-programming', 'java']
    plugins {
        CompetitiveProgrammingPlugin {
            displayName = 'Competitive Programming Gradle Plugin'
        }
    }
}